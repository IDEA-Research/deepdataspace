name: app-cd
on:
  push:
    tags:
      - 'v*.*.*'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  helmRepoURL: 'https://harbor.cvrgo.com/chartrepo/dds'
  helmRepoName: 'dds-deploy'
  k8sNamespace: ''
  chartPath: 'pipeline'
  dockerRegistry: 'harbor.cvrgo.com/dds'
jobs:
  build_and_deploy:
    if: github.repository_owner == 'deepdataspace'
    runs-on: self-hosted
    steps:
      - name: Checkout deepdataspace
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Git Tag
        id: get_git_tag
        run: echo "tag=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
      - name: Set Environment Variables
        run: |
          gitTag="${{ steps.get_git_tag.outputs.tag }}"
          echo "GIT_TAG=${gitTag}"
          echo "GIT_TAG=${gitTag}" >> $GITHUB_ENV
          if [[ "${gitTag}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+-dev[0-9]+ ]]; then
            echo "K8S_NAMESPACE=dds-dev" >> $GITHUB_ENV
          elif [[ "${gitTag}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+ ]]; then
            echo "K8S_NAMESPACE=dds-test" >> $GITHUB_ENV
          elif [[ "${gitTag}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "K8S_NAMESPACE=dds-prd" >> $GITHUB_ENV
          else
            echo "Invalid git tag. Pipeline terminated."
            exit 1
          fi
      - name: Checkout deepdataspace-app-env
        uses: actions/checkout@v2
        with:
          repository: deepdataspace/deepdataspace-app-env
          ref: 'main'
          path: deepdataspace-app-env
          token: ${{ secrets.DDS_ORG_GITHUB_TOKEN }}
      - name: Copy Frontend Build Env File
        run: | 
          if [[ "${{ env.K8S_NAMESPACE }}" == 'dds-dev' ]]; then  
            cp deepdataspace-app-env/.env.dev packages/app/.env.local  
          elif [[ "${{ env.K8S_NAMESPACE }}" == 'dds-test' ]]; then  
            cp deepdataspace-app-env/.env.test packages/app/.env.local  
          elif [[ "${{ env.K8S_NAMESPACE }}" == 'dds-prd' ]]; then  
            cp deepdataspace-app-env/.env.prod packages/app/.env.local  
          fi  
          echo "TAG_VERSION=${{ env.GIT_TAG }}" >> packages/app/.env.local
      - name: Checkout Devops Repo
        uses: actions/checkout@v2
        with:
          repository: deepdataspace/deepdataspace-helm
          ref: 'main'
          path: deepdataspace-helm
          token: ${{ secrets.DDS_ORG_GITHUB_TOKEN }}
      - name: Copy Dockerfiles
        run: |
          cp -r deepdataspace-helm/dockerfiles .

      - name: Build Docker Image
        run: |
          imageName="${{ env.helmRepoName }}"
          imageTag="${{ env.GIT_TAG }}"
          docker login ${{ env.dockerRegistry }} -u 'robot$dds+robot-dds-deploy' --password ${{ secrets.HARBOR_CREDENTIAL }}
          docker build -t ${{ env.dockerRegistry }}/${imageName}:${imageTag} -f dockerfiles/deploy.Dockerfile .
          docker push ${{ env.dockerRegistry }}/${imageName}:${imageTag}

      - name: Copy Helm Values File
        working-directory: deepdataspace-helm
        run: |
          chartPath="${{ env.chartPath }}"
          if [[ "${{ env.K8S_NAMESPACE }}" == 'dds-dev' ]]; then 
            cp ${chartPath}/env/dev-values.yaml ${chartPath}/values.yaml
          elif [[ "${{ env.K8S_NAMESPACE }}" == 'dds-test' ]]; then 
            cp ${chartPath}/env/test-values.yaml ${chartPath}/values.yaml
          elif [[ "${{ env.K8S_NAMESPACE }}" == 'dds-prd' ]]; then 
            cp ${chartPath}/env/prd-values.yaml ${chartPath}/values.yaml
          fi 
          
      - name: Update Helm Chart
        working-directory: deepdataspace-helm
        run: |
          imageName="${{ env.helmRepoName }}"
          imageTag="${{ env.GIT_TAG }}"
          ver="${{ env.GIT_TAG }}-$(date +%s)"
          echo "ver=${ver}" >> $GITHUB_ENV
          chartPath="${{ env.chartPath }}"
          sed -i "s/^version:.*/version: ${ver}/" ${chartPath}/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: ${imageTag}/" ${chartPath}/Chart.yaml
          sed -i "s/^name:.*/name: ${{ env.K8S_NAMESPACE }}/" ${chartPath}/Chart.yaml

      - name: Push Helm Chart to Harbor
        working-directory: deepdataspace-helm
        run: |
          if ! helm repo list | awk '{print $1}' | grep -q "^${{ env.helmRepoName }}$"; then
            helm repo add --username 'robot$dds+robot-dds-deploy' --password ${{ secrets.HARBOR_CREDENTIAL }} ${{ env.helmRepoName }} ${{ env.helmRepoURL }} 
          fi
          helm repo update 
          helm package ${{ env.chartPath }}
          helm cm-push ${{ env.chartPath }} ${{ env.helmRepoName }}
          
      - name: Deploy to Kubernetes
        working-directory: deepdataspace-helm
        run: |
          chartPath="${{ env.chartPath }}"
          imageTag="${{ env.GIT_TAG }}"
          helm repo update
          helm upgrade --install --wait --namespace ${{ env.K8S_NAMESPACE }} ${{ env.K8S_NAMESPACE }} ${{ env.helmRepoName }}/${{ env.K8S_NAMESPACE }} -f ${chartPath}/values.yaml --version ${{ env.ver }} --set django.imageTag=${imageTag},celery.imageTag=${imageTag}
