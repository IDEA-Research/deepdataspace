name: tool-ci
on:
  push:
    branches:
      - '**'
    tags:
      - ''
jobs:
  scan:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Scan Code
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=dds-tool
  test_on_windows_2022:
    needs: scan
    runs-on: windows-2022
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - name: Run Test
        run: |
          pip install -r requirements-dev.txt
          pytest --cov=deepdataspace -s --cov-report=xml
  test_on_macos_12:
    needs: scan
    runs-on: macos-12
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - name: Run Test
        run: |
          pip install -r requirements-dev.txt
          pytest --cov=deepdataspace -s --cov-report=xml
  test_on_ubuntu_2204:
    needs: [ test_on_windows_2022, test_on_macos_12 ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - name: Run Test
        run: |
          pip install -r requirements-dev.txt
          pytest --cov=deepdataspace -s --cov-report=xml
      - name: Upload Test Report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
          flags: backend

  build:
    runs-on: ubuntu-20.04
    name: Test JS frontend
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install requirements
        run: pnpm install --frozen-lockfile
      - name: Run pnpm audit
        run: pnpm audit --registry=https://registry.npmjs.org
      - name: Run dev:build to add .umi files
        run: pnpm run dev:build
      - name: Run tests and collect coverage
        run: pnpm run test
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
          flags: backend
        